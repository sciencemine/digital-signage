{
  "_args": [
    [
      {
        "raw": "broccoli-merge-trees@^1.1.1",
        "scope": null,
        "escapedName": "broccoli-merge-trees",
        "name": "broccoli-merge-trees",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Gluef_000\\Desktop\\digital-signage\\node_modules\\ember-bootstrap"
    ]
  ],
  "_from": "broccoli-merge-trees@>=1.1.1 <2.0.0",
  "_id": "broccoli-merge-trees@1.2.4",
  "_inCache": true,
  "_location": "/broccoli-merge-trees",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/broccoli-merge-trees-1.2.4.tgz_1488815762223_0.323205673834309"
  },
  "_npmUser": {
    "name": "joliss",
    "email": "joliss42@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "broccoli-merge-trees@^1.1.1",
    "scope": null,
    "escapedName": "broccoli-merge-trees",
    "name": "broccoli-merge-trees",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/broccoli-babel-transpiler",
    "/broccoli-stew",
    "/ember-bootstrap",
    "/ember-runtime-enumerable-includes-polyfill/broccoli-babel-transpiler",
    "/ember-wormhole/broccoli-babel-transpiler"
  ],
  "_resolved": "https://registry.npmjs.org/broccoli-merge-trees/-/broccoli-merge-trees-1.2.4.tgz",
  "_shasum": "a001519bb5067f06589d91afa2942445a2d0fdb5",
  "_shrinkwrap": null,
  "_spec": "broccoli-merge-trees@^1.1.1",
  "_where": "C:\\Users\\Gluef_000\\Desktop\\digital-signage\\node_modules\\ember-bootstrap",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/broccolijs/broccoli-merge-trees/issues"
  },
  "dependencies": {
    "broccoli-plugin": "^1.3.0",
    "can-symlink": "^1.0.0",
    "fast-ordered-set": "^1.0.2",
    "fs-tree-diff": "^0.5.4",
    "heimdalljs": "^0.2.1",
    "heimdalljs-logger": "^0.1.7",
    "rimraf": "^2.4.3",
    "symlink-or-copy": "^1.0.0"
  },
  "description": "Broccoli plugin to merge multiple trees into one",
  "devDependencies": {
    "broccoli-builder": "^0.18.0",
    "broccoli-fixture": "^0.1.0",
    "chai": "^3.4.0",
    "chai-as-promised": "^5.1.0",
    "chai-files": "^1.4.0",
    "fixturify": "^0.3.1",
    "fs-extra": "^1.0.0",
    "mocha": "^2.3.3",
    "mocha-jshint": "^2.2.5"
  },
  "directories": {},
  "dist": {
    "shasum": "a001519bb5067f06589d91afa2942445a2d0fdb5",
    "tarball": "https://registry.npmjs.org/broccoli-merge-trees/-/broccoli-merge-trees-1.2.4.tgz"
  },
  "files": [
    "index.js",
    "entry.js"
  ],
  "gitHead": "7d96b908c5e24289e3a5dd5dc87ca7e6f6f5e674",
  "homepage": "https://github.com/broccolijs/broccoli-merge-trees#readme",
  "keywords": [
    "broccoli-plugin",
    "merge",
    "copy"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hjdivad",
      "email": "npm@hjdivad.com"
    },
    {
      "name": "joliss",
      "email": "joliss42@gmail.com"
    },
    {
      "name": "rwjblue",
      "email": "me@rwjblue.com"
    },
    {
      "name": "stefanpenner",
      "email": "stefan.penner@gmail.com"
    }
  ],
  "name": "broccoli-merge-trees",
  "optionalDependencies": {},
  "readme": "# broccoli-merge-trees\n\n[![Build Status](https://travis-ci.org/broccolijs/broccoli-merge-trees.svg?branch=master)](https://travis-ci.org/broccolijs/broccoli-merge-trees)\n[![Build status](https://ci.appveyor.com/api/projects/status/9fkvegf4qbvfsg5v?svg=true)](https://ci.appveyor.com/project/embercli/broccoli-merge-trees)\n\nCopy multiple trees of files on top of each other, resulting in a single merged tree.\n\n## Installation\n\n```bash\nnpm install --save-dev broccoli-merge-trees\n```\n\n## Usage\n\n```js\nvar BroccoliMergeTrees = require('broccoli-merge-trees');\n\nvar mergedNode = new BroccoliMergeTrees(inputNodes, options);\n```\n\n* **`inputNodes`**: An array of nodes, whose contents will be merged\n\n* **`options`**: A hash of options\n\n### Options\n\n* `overwrite`: By default, broccoli-merge-trees throws an error when a file\n  exists in multiple nodes. If you pass `{ overwrite: true }`, the output\n  will contain the version of the file as it exists in the last input\n  node that contains it.\n\n* `annotation`: A note to help tell multiple plugin instances apart.\n\n### Example\n\nIf this is your `Brocfile.js`:\n\n```js\nvar BroccoliMergeTrees = require('broccoli-merge-trees');\n\nmodule.exports = new BroccoliMergeTrees(['public', 'scripts']);\n```\n\nAnd your project contains these files:\n\n    .\n    ├─ public\n    │  ├─ index.html\n    │  └─ images\n    │     └─ logo.png\n    ├─ scripts\n    │  └─ app.js\n    ├─ Brocfile.js\n    …\n\nThen running `broccoli build the-output` will generate this folder:\n\n    the-output\n    ├─ app.js\n    ├─ index.html\n    └─ images\n       └─ logo.png\n\nThe parent folders, `public` and `scripts` in this case, are not included in the output. The output tree contains only the files *within* each folder, all mixed together.\n\n## Contributing\n\nClone this repo and run the tests like so:\n\n```\nnpm install\nnpm test\n```\n\nIssues and pull requests are welcome. If you change code, be sure to re-run\n`npm test`. Oftentimes it's useful to add or update tests as well.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/broccolijs/broccoli-merge-trees.git"
  },
  "scripts": {
    "test": "mocha",
    "test:debug": "mocha debug"
  },
  "version": "1.2.4"
}
